{"name":"basiq.js","tagline":"basiq.js is a cross-platform JavaScript minimal library inspired by jQuery and based on new ES6 recommendation.","body":"# basiq.js \r\nbasiq is a cross-platform JavaScript minimal library inspired by jQuery and based on new ES6 recommendation. Like as jQuery, basiq is designed to simplify the client-side scripting of HTML.\r\n\r\nThis library provides basic utilities as:\r\n* DOM selector elements\r\n* handle events\r\n* helpers for develop Ajax applications\r\n\r\nAlso provides capabilities for developers to create plugins on top of the JavaScript library.(basiq plugins)\r\n\r\n    Creator: @smorcuend\r\n    Contributors: @jmanuel_rosa\r\n    Source code: https://smorcuend.github.io/basiq\r\n\r\n##Browser support\r\n* Chrome 9+ \r\n* Firefox 6+\r\n* Opera 11.6+\r\n* Safari 6+\r\n* IE 10+ (9 with polyfills)\r\n\r\n##Changelog\r\n* v0.0.1(work in progress)\r\n    - Initial draft version\r\n    - Gruntfile & bower.json added\r\n    - source code scaffold added\r\n    - dist & demo folder added\r\n\r\n## Polyfills ES6\r\n\r\n* String.prototype.contains\r\n\r\n* String.prototype.starsWith\r\n\r\n* Promise Object - https://github.com/jakearchibald/es6-promise\r\n\r\n## Other functions\r\n\r\n* supports: Check Support for some functionality or CSS property (detect CSS prefixes)    \r\n\r\n* addWheelListener: Listener for mouse wheel action\r\n\r\n## API Documentation\r\n\r\n### Query selector \"$(selector)\" function\r\n\r\n    .all()\r\nGet all element(s) from DOM query selector\r\n@returns {Array}\r\n<br><br>\r\n\r\n    .append()\r\nAppend HTML Elements from string to DOM query selector\r\n<br><br>\r\n\r\n    .addClass()\r\naddClass to HTMLElement from DOM query selector\r\n<br><br>\r\n\r\n    .removeClass()\r\nremoveClass to HTMLElement from DOM query selector\r\n<br><br>\r\n\r\n    .toggleClass()\r\ntoggleClass to HTMLElement from DOM query selector\r\n<br><br>\r\n\r\n    .css()\r\nCss apply styles function. Example: {'color':'red','fontSize':'16px'}\r\n<br><br>\r\n\r\n    .closest(pivot)\r\nGet if element from DOM query selector have parent {pivot}\r\n@return {[basiq]}\r\n<br><br>\r\n\r\n    .parent()\r\nGet parent from element from DOM query selector\r\n@return {[basiq]}\r\n<br><br>\r\n\r\n    .columnizr(numberOfCols, columnGap, columnRule)\r\nCSS3 Columnizr function. Params -> numberOfCols: {int},columnGap:{css string  style},columnRule:{css string style}\r\n<br><br>\r\n\r\n    .resize( callback )\r\nDetect resize event\r\n<br><br>\r\n\r\n### basiq helpers\r\n\r\n    $.customEvent(name,data)\r\nGenerate custom events - Modern browsers. Params = name:{string}, data:{function}\r\n<br><br>\r\n\r\n    $.ajax( url, type, data, async, arrayHeaders, responseType)\r\nXHR helper<br>\r\n@return {native Promise}\r\n<br><br>\r\n\r\n    $.runLater(callback)\r\nForce event added to the browser bucket event\r\n<br><br>\r\n\r\n### basiq plugins\r\n\r\n###basiq.logger (basic logging helper):\r\n    $.log\r\n<br>\r\n.err() - Error console log<br>\r\n.warn() - warning console log <br>\r\ninfo() - info console log<br>\r\n<br><br>\r\n\r\n####Set up debug mode:\r\n$.log.debugmode:[debug mode]\r\n[debug mode]\r\n    0: Debug mode disable\r\n    1: Simple debug mode\r\n    2: Debug mode with trace\r\n<br>\r\n\r\n###basiq.browser (basic browser detect helper):\r\n    $.browser\r\n<br>\r\n.{\r\n    browser,\r\n    version,\r\n    name\r\n}\r\n<br><br>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"UA-31122385-6","note":"Don't delete this file! It's used internally to help with page regeneration."}